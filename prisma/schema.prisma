// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("NEXT_PUBLIC_POOLED_DATABASE_URL")
  directUrl = env("NEXT_PUBLIC_DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? 
  refresh_token_expires_in Int?
  access_token             String? 
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? 
  session_state            String?
  oauth_token_secret       String? 
  oauth_token              String? 
  ext_expires_in           Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ClientDetail {
  clientId                String @unique @id 
  companyName             String @unique
  contactPerson           String
  contactPersonEmail      String @unique
  industryType            String
  employeeCount           Int
  streetAddress           String
  city                    String
  pinCode                 Int
  currentDMSName          String
  typeOfDocument          String
  currentDocumentFlow     String
  inputSourceOfDocument   String
  numberOfUsersRequired   Int
  endStorageSystem        String
  totalDocumentsPerDay    Int
  sampleInput             String?
  configuredMailboxes     String?
  itAdminEmail            String?

  @@map("client_details")
}


model UserDetails {
  userId String @id @default(uuid())
  clientId String
  userName String
  userEmail String @unique
  userCompany String?
  userStatus String?
  userPosition String?
  userVerified Boolean
  userMailboxesAccess String?
  userRole String?
  
  @@map("user_details")
  
}
